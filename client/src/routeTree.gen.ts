/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfiloRouteImport } from './routes/profilo'
import { Route as ParrocchieRouteImport } from './routes/parrocchie'
import { Route as LoginRouteImport } from './routes/login'
import { Route as FamigliaRouteImport } from './routes/famiglia'
import { Route as EventiRouteImport } from './routes/eventi'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminUtentiRouteImport } from './routes/admin/utenti'
import { Route as AdminReportisticaRouteImport } from './routes/admin/reportistica'
import { Route as AdminIscrizioniRouteImport } from './routes/admin/iscrizioni'
import { Route as AdminImpostazioniRouteImport } from './routes/admin/impostazioni'
import { Route as AdminEventiRouteImport } from './routes/admin/eventi'

const ProfiloRoute = ProfiloRouteImport.update({
  id: '/profilo',
  path: '/profilo',
  getParentRoute: () => rootRouteImport,
} as any)
const ParrocchieRoute = ParrocchieRouteImport.update({
  id: '/parrocchie',
  path: '/parrocchie',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const FamigliaRoute = FamigliaRouteImport.update({
  id: '/famiglia',
  path: '/famiglia',
  getParentRoute: () => rootRouteImport,
} as any)
const EventiRoute = EventiRouteImport.update({
  id: '/eventi',
  path: '/eventi',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUtentiRoute = AdminUtentiRouteImport.update({
  id: '/utenti',
  path: '/utenti',
  getParentRoute: () => AdminRoute,
} as any)
const AdminReportisticaRoute = AdminReportisticaRouteImport.update({
  id: '/reportistica',
  path: '/reportistica',
  getParentRoute: () => AdminRoute,
} as any)
const AdminIscrizioniRoute = AdminIscrizioniRouteImport.update({
  id: '/iscrizioni',
  path: '/iscrizioni',
  getParentRoute: () => AdminRoute,
} as any)
const AdminImpostazioniRoute = AdminImpostazioniRouteImport.update({
  id: '/impostazioni',
  path: '/impostazioni',
  getParentRoute: () => AdminRoute,
} as any)
const AdminEventiRoute = AdminEventiRouteImport.update({
  id: '/eventi',
  path: '/eventi',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/eventi': typeof EventiRoute
  '/famiglia': typeof FamigliaRoute
  '/login': typeof LoginRoute
  '/parrocchie': typeof ParrocchieRoute
  '/profilo': typeof ProfiloRoute
  '/admin/eventi': typeof AdminEventiRoute
  '/admin/impostazioni': typeof AdminImpostazioniRoute
  '/admin/iscrizioni': typeof AdminIscrizioniRoute
  '/admin/reportistica': typeof AdminReportisticaRoute
  '/admin/utenti': typeof AdminUtentiRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/eventi': typeof EventiRoute
  '/famiglia': typeof FamigliaRoute
  '/login': typeof LoginRoute
  '/parrocchie': typeof ParrocchieRoute
  '/profilo': typeof ProfiloRoute
  '/admin/eventi': typeof AdminEventiRoute
  '/admin/impostazioni': typeof AdminImpostazioniRoute
  '/admin/iscrizioni': typeof AdminIscrizioniRoute
  '/admin/reportistica': typeof AdminReportisticaRoute
  '/admin/utenti': typeof AdminUtentiRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/eventi': typeof EventiRoute
  '/famiglia': typeof FamigliaRoute
  '/login': typeof LoginRoute
  '/parrocchie': typeof ParrocchieRoute
  '/profilo': typeof ProfiloRoute
  '/admin/eventi': typeof AdminEventiRoute
  '/admin/impostazioni': typeof AdminImpostazioniRoute
  '/admin/iscrizioni': typeof AdminIscrizioniRoute
  '/admin/reportistica': typeof AdminReportisticaRoute
  '/admin/utenti': typeof AdminUtentiRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/eventi'
    | '/famiglia'
    | '/login'
    | '/parrocchie'
    | '/profilo'
    | '/admin/eventi'
    | '/admin/impostazioni'
    | '/admin/iscrizioni'
    | '/admin/reportistica'
    | '/admin/utenti'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/eventi'
    | '/famiglia'
    | '/login'
    | '/parrocchie'
    | '/profilo'
    | '/admin/eventi'
    | '/admin/impostazioni'
    | '/admin/iscrizioni'
    | '/admin/reportistica'
    | '/admin/utenti'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/eventi'
    | '/famiglia'
    | '/login'
    | '/parrocchie'
    | '/profilo'
    | '/admin/eventi'
    | '/admin/impostazioni'
    | '/admin/iscrizioni'
    | '/admin/reportistica'
    | '/admin/utenti'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  DashboardRoute: typeof DashboardRoute
  EventiRoute: typeof EventiRoute
  FamigliaRoute: typeof FamigliaRoute
  LoginRoute: typeof LoginRoute
  ParrocchieRoute: typeof ParrocchieRoute
  ProfiloRoute: typeof ProfiloRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profilo': {
      id: '/profilo'
      path: '/profilo'
      fullPath: '/profilo'
      preLoaderRoute: typeof ProfiloRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/parrocchie': {
      id: '/parrocchie'
      path: '/parrocchie'
      fullPath: '/parrocchie'
      preLoaderRoute: typeof ParrocchieRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/famiglia': {
      id: '/famiglia'
      path: '/famiglia'
      fullPath: '/famiglia'
      preLoaderRoute: typeof FamigliaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/eventi': {
      id: '/eventi'
      path: '/eventi'
      fullPath: '/eventi'
      preLoaderRoute: typeof EventiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/utenti': {
      id: '/admin/utenti'
      path: '/utenti'
      fullPath: '/admin/utenti'
      preLoaderRoute: typeof AdminUtentiRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/reportistica': {
      id: '/admin/reportistica'
      path: '/reportistica'
      fullPath: '/admin/reportistica'
      preLoaderRoute: typeof AdminReportisticaRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/iscrizioni': {
      id: '/admin/iscrizioni'
      path: '/iscrizioni'
      fullPath: '/admin/iscrizioni'
      preLoaderRoute: typeof AdminIscrizioniRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/impostazioni': {
      id: '/admin/impostazioni'
      path: '/impostazioni'
      fullPath: '/admin/impostazioni'
      preLoaderRoute: typeof AdminImpostazioniRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/eventi': {
      id: '/admin/eventi'
      path: '/eventi'
      fullPath: '/admin/eventi'
      preLoaderRoute: typeof AdminEventiRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminEventiRoute: typeof AdminEventiRoute
  AdminImpostazioniRoute: typeof AdminImpostazioniRoute
  AdminIscrizioniRoute: typeof AdminIscrizioniRoute
  AdminReportisticaRoute: typeof AdminReportisticaRoute
  AdminUtentiRoute: typeof AdminUtentiRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminEventiRoute: AdminEventiRoute,
  AdminImpostazioniRoute: AdminImpostazioniRoute,
  AdminIscrizioniRoute: AdminIscrizioniRoute,
  AdminReportisticaRoute: AdminReportisticaRoute,
  AdminUtentiRoute: AdminUtentiRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  DashboardRoute: DashboardRoute,
  EventiRoute: EventiRoute,
  FamigliaRoute: FamigliaRoute,
  LoginRoute: LoginRoute,
  ParrocchieRoute: ParrocchieRoute,
  ProfiloRoute: ProfiloRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
